// OSI 标准的是7层

// TCP/IP 五层
// TCP 传输层
// IP 网络层

// TCP 传输层 全双工服务 Transimision Control Protocal  

// client  -> server
// Segment 报文段
// 每行32个字节
//  0-65535 随机端口号16个字节最大表示65535
// 32位序列号 把长文件分成多段 编号
// 确认应答号 当次S 长度为L 下次 S+L
// 默认头部4*5= 20个字节
// 默认会把数据先放到缓存中，然后统一发送到服务端（懒发送）
// URG 紧急停止 1 级别最高
// ACK 确认应答位
// PSH 
// RSY
// SYN 1 请求建立连接；同步请求附带seq = 0 序列号 一般默认为0


// FIN 发送完成位1
// 1.16位窗口大小
// 2. 16位TCP校验和；任务清单，校验数据是否发送完全；

// 客户端-》服务器

// 每次发送多少数据？
// 1.先问一下服务端的接受能力；取决于服务端窗口大小（会动态调整）
// 单工 server -> client side
// 半双工  对讲机，一方说的时候对方只能听；单行道，只能单侧同行
// 双工 server <-> client side 双车道；打电话，双方可以同时说话

// TCP的三次握手: 目的：确认客户端和服务端的连接已经确立；
// 服务端返回的ack = 1； 是对方的seq号+数据长度
// seq是自己的序列号 就是对方的ack值
// ack的值为对方的序列号+1 

// 四次挥手结束；也可能是3次；要看客户端请求关闭时，服务端当时是否有数据要发送
// 服务端LAST_ACY开启定时器
// 客户端TIME_WAIT 一般会等待4分钟；2MSL时间MaxSaveLife报文最长存活时间；

// TCP优化 滑动窗口 每次发多个包；并行发送；并且窗口大小是不固定的；