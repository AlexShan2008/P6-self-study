{"version":3,"file":"bundle.umd.js","sources":["../../../../eagle-sdk/perf.js","../../../../eagle-sdk/util.js","../../../../eagle-sdk/resources.js","../../../../eagle-sdk/errorCatch.js","../../../../eagle-sdk/xhr.js","../../../../eagle-sdk/util/xpath.js","../../../../eagle-sdk/behavior.js","../../../../eagle-sdk/index.js"],"sourcesContent":["// https://developer.mozilla.org/zh-CN/docs/Web/API/PerformanceTiming\n// 数据收集\nlet perf = {\n    init: (cb) => {\n        let cycleFreq = 100; // 循环轮询的时间\n        let isDOMReady = false;\n        let isOnload = false;\n        let performance = window.performance || window.mozPerformance || window.msPerformance || window.webkitPerformance;\n\n        let Util = {\n            addEventListener: function (name, callback, useCapture) {\n                if (window.addEventListener) {\n                    return window.addEventListener(name, callback, useCapture);\n                } else if (window.attachEvent) {\n                    return window.attachEvent('on' + name, callback);\n                }\n            },\n\n            domready: function (callback) {\n                if (isOnload === true) { return void 0; }\n                let timer = null;\n\n                if (document.readyState === 'interactive') {\n                    runCheck();\n                } else if (document.addEventListener) {\n                    document.addEventListener('DOMContentLoaded', function () {\n                        runCheck();\n                    }, false);\n                } else if (document.attachEvent) {\n                    document.attachEvent('onreadystatechange', function () {\n                        runCheck();\n                    });\n                }\n\n                function runCheck() {\n                    if (performance.timing.domInteractive) {\n                        clearTimeout(timer);\n                        callback();\n                        isDOMReady = true;\n                    } else {\n                        timer = setTimeout(runCheck, cycleFreq);\n                    }\n                }\n            },\n\n            onload: function (callback) {\n                let timer = null;\n\n                if (document.readyState === 'complete') {\n                    runCheck();\n                } else {\n                    Util.addEventListener('load', function () {\n                        runCheck();\n                    }, false);\n                }\n\n                function runCheck() {\n                    if (performance.timing.loadEventEnd) {\n                        clearTimeout(timer);\n                        callback();\n                        isOnload = true;\n                    } else {\n                        timer = setTimeout(runCheck, cycleFreq);\n                    }\n                }\n            }\n        };\n\n        let reportPerf = function () {\n            if (!performance) {\n                return void 0;\n            }\n\n            // 过滤无效数据；\n            function filterTime(a, b) {\n                return (a > 0 && b > 0 && (a - b) >= 0) ? (a - b) : undefined;\n            }\n\n            // append data from window.performance\n            let timing = performance.timing;\n\n            let perfData = {\n                // 网络建连： 运维、连接、服务器等\n                pervPage: filterTime(timing.fetchStart, timing.navigationStart), // 上一个页面\n                redirect: filterTime(timing.responseEnd, timing.redirectStart), // 页面重定向时间\n                dns: filterTime(timing.domainLookupEnd, timing.domainLookupStart), // DNS查找时间\n                connect: filterTime(timing.connectEnd, timing.connectStart), // TCP建连时间\n                network: filterTime(timing.connectEnd, timing.navigationStart), // 网络总耗时\n\n                // 网络接收： 可能是运维或者服务端的问题\n                send: filterTime(timing.responseStart, timing.requestStart), // 前端从发送到接收到后端第一个返回\n                receive: filterTime(timing.responseEnd, timing.responseStart), // 接受页面时间\n                request: filterTime(timing.responseEnd, timing.requestStart), // 请求页面总时间\n\n                // 前端渲染\n                dom: filterTime(timing.domComplete, timing.domLoading), // dom解析时间\n                loadEvent: filterTime(timing.loadEventEnd, timing.loadEventStart), // loadEvent时间\n                frontend: filterTime(timing.loadEventEnd, timing.domLoading), // 前端总时间\n\n                // 关键阶段\n                load: filterTime(timing.loadEventEnd, timing.navigationStart), // 页面完全加载总时间\n                domReady: filterTime(timing.domContentLoadedEventStart, timing.navigationStart), // domready时间\n                interactive: filterTime(timing.domInteractive, timing.navigationStart), // 可操作时间\n                ttfb: filterTime(timing.responseStart, timing.navigationStart),  // 首字节时间,监测服务端性能 \n            };\n\n            return perfData;\n        };\n\n        Util.domready(function () {\n            let perfData = reportPerf('domready');\n            perfData.type = 'domready';\n            cb(perfData);\n        });\n\n        Util.onload(function () {\n            let perfData = reportPerf('onload');\n            perfData.type = 'onload';\n            cb(perfData);\n        });\n    }\n};\n\nexport default perf;","export let noop = () => { };\nexport let onload = (cb) => {\n\n  if (document.readyState === 'complete') {\n    cb();\n    return void 0;\n  }\n  window.addEventListener('load', cb);\n};\n\nexport default {\n  noop,\n  onload\n};","import { onload } from './util.js';\n\n// 资源监控 entryType:\"resource\"\n// 过滤无效数据\nfunction filterTime(a, b) {\n    return (a > 0 && b > 0 && (a - b) >= 0) ? (a - b) : undefined;\n}\n\nlet resolvePerformanceTiming = (timing) => {\n    let o = {\n        initiatorType: timing.initiatorType,//类型 link  img\n        name: timing.name,//连接名称\n        duration: parseInt(timing.duration),//加载时长\n\n        // 连接过程\n        redirect: filterTime(timing.redirectEnd, timing.redirectStart), // 重定向\n        dns: filterTime(timing.domainLookupEnd, timing.domainLookupStart), // DNS解析\n        connect: filterTime(timing.connectEnd, timing.connectStart), // TCP建连\n        network: filterTime(timing.connectEnd, timing.startTime), // 网络总耗时\n\n        // 接受过程\n        send: filterTime(timing.responseStart, timing.requestStart), // 发送开始到接受第一个返回\n        receive: filterTime(timing.responseEnd, timing.responseStart), // 接收总时间\n        request: filterTime(timing.responseEnd, timing.requestStart), // 总时间\n\n        // 核心指标\n        ttfb: filterTime(timing.responseStart, timing.requestStart), // 首字节时间\n    };\n\n    return o;\n};\n\n// 循环获得每一个资源的性能数据；\nlet resolveEntries = (entries) => entries.map(item => resolvePerformanceTiming(item));\n\n// 静态资源收集的数据\nlet resources = {\n    init: (cb) => {\n        let performance = window.performance || window.mozPerformance || window.msPerformance || window.webkitPerformance;\n        if (!performance || !performance.getEntries) {\n            return void 0;\n        }\n\n        // 兼容性检验；\n        if (window.PerformanceObserver) {\n            // 动态获得每个资源信息；必须在onload之前进行加载；\n            let observer = new window.PerformanceObserver((list) => {\n                try {\n                    let entries = list.getEntries();\n                    cb(resolveEntries(entries));\n                } catch (e) {\n                    console.error(e);\n                }\n            });\n            observer.observe({\n                entryTypes: ['resource']\n            })\n        } else {\n            // onload之后获得所有的资源信息；\n            onload(() => {\n                let entries = performance.getEntriesByType('resource');\n                cb(resolveEntries(entries));\n            });\n        }\n    },\n};\n\nexport default resources;","// 对window.onerror 等浏览器报错的处理\n\n// 对错误进行分类和处理；\nlet formatError = (errObj) => {\n  let col = errObj.column || errObj.columnNumber; // Safari Firefox: code colum\n  let row = errObj.line || errObj.lineNumber; // Safari Firefox: code row \n  let message = errObj.message;\n  let name = errObj.name;\n\n  // stack中的错误信息更加精准；\n  let { stack } = errObj;\n  if (stack) {\n    // matchUrl 原报错信息；\n    let matchUrl = stack.match(/https?:\\/\\/[^\\n]+/);//+ 至少一个数字\n    let urlFirstStack = matchUrl ? matchUrl[0] : '';//既有文件信息，也有行列信息 http://localhost:3003/main.js:29:3\n    let regUrlCheck = /https?:\\/\\/(\\S)*\\.js/;//真正需要的数据信息；\n\n    // 获取真正的URL，文件名称\n    let resourceUrl = '';\n    if (regUrlCheck.test(urlFirstStack)) {\n      resourceUrl = urlFirstStack.match(regUrlCheck)[0];\n    }\n\n    // 行列信息 main.js:29:3\n    let stackCol = null;\n    let stackRow = null;\n    let posStack = urlFirstStack.match(/:(\\d+):(\\d+)/);\n    if (posStack && posStack.length >= 3) {\n      [, stackCol, stackRow] = posStack;\n    }\n\n    // TODO: formatStack\n    return {\n      content: stack,\n      col: Number(col || stackCol),\n      row: Number(row || stackRow),\n      message, name, resourceUrl\n    };\n  }\n\n  return {\n    row, col, message, name\n  }\n};\n\nlet errorCatch = {\n  init: (cb) => {\n    let _originOnerror = window.onerror;\n    window.onerror = (...arg) => {\n      let [errorMessage, scriptURI, lineNumber, columnNumber, errorObj] = arg;\n      // console.log(arg, 'cuowu');\n      try {\n        let errorInfo = formatError(errorObj);\n        errorInfo._errorMessage = errorMessage;\n        errorInfo._scriptURI = scriptURI;\n        errorInfo._lineNumber = lineNumber;\n        errorInfo._columnNumber = columnNumber;\n        errorInfo.type = 'onerror';\n        cb(errorInfo);\n        _originOnerror && _originOnerror.apply(window, arg);\n\n      } catch (e) {\n\n      }\n\n    };\n\n    // catch promise unhandlerejection\n    let _originOnunhandledrejection = window.onunhandledrejection;\n    window.onunhandledrejection = (...arg) => {\n      let e = arg[0];\n      let reason = e.reason;\n      cb({\n        type: e.type || 'unhandledrejection',\n        reason\n      });\n      _originOnunhandledrejection && _originOnunhandledrejection.apply(window, arg);\n    };\n  },\n};\n\nexport default errorCatch;","// ajax请求的监控；\n// 更改ajax的prototype，从底层添加切片，保证监控所有的ajax请求；\n// TODO: 自身的请求不需要拦截，否则进入死循环；\n\nlet xhrHook = {\n  init: (cb) => {\n    // xhr hook\n    // 确保用户只引用一次，不能多次调用监控代码；\n    let xhr = window.XMLHttpRequest;\n    if (xhr._eagle_flag === true) {\n      return void 0;\n    }\n    xhr._eagle_flag = true;\n\n    let _originOpen = xhr.prototype.open;\n    xhr.prototype.open = function (method, url, async, user, password) {\n      // TODO: eagle url check\n      this._eagle_xhr_info = {\n        url, method, status: null\n      };\n      return _originOpen.apply(this, arguments);\n    };\n\n    let _originSend = xhr.prototype.send;\n    xhr.prototype.send = function (value) {\n      let _self = this;\n      this._eagle_start_time = Date.now();//ajax发起的时间；\n\n      // 高阶函数；\n      let ajaxEnd = (event) => () => {\n        if (_self.response) {\n          // 统计请求数据的大小；\n          let responseSize = null;\n          switch (_self.responseType) {\n            case 'json':\n              // TODO: JSON兼容性&&stringify报错的处理；\n              responseSize = JSON && JSON.stringify(_this.response).length;\n              break;\n            case 'blob':\n            case 'moz-blob':\n              responseSize = _self.response.size;\n              break;\n            case 'arraybuffer':\n              responseSize = _self.response.byteLength;\n            case 'document':\n              responseSize = _self.response.documentElement && _self.response.documentElement.innerHTML && (_self.response.documentElement.innerHTML.length + 28);\n              break;\n            default:\n              responseSize = _self.response.length;\n          }\n          _self._eagle_xhr_info.event = event;\n          _self._eagle_xhr_info.status = _self.status;\n          _self._eagle_xhr_info.success = (_self.status >= 200 && _self.status <= 206) || _self.status === 304;\n          _self._eagle_xhr_info.duration = Date.now() - _self._eagle_start_time;\n          _self._eagle_xhr_info.responseSize = responseSize;\n          _self._eagle_xhr_info.requestSize = value ? value.length : 0;//TODO: 对number类型数据的处理\n          _self._eagle_xhr_info.type = 'xhr';\n          cb(this._eagle_xhr_info);\n        }\n      };\n\n      // TODO: eagle url check \n      // 请求结束\n      if (this.addEventListener) {\n        this.addEventListener('load', ajaxEnd('load'), false); //成功\n        this.addEventListener('error', ajaxEnd('error'), false); //失败\n        this.addEventListener('abort', ajaxEnd('abort'), false); //取消请求\n      } else {\n        // 兼容性处理；\n        let _origin_onreadystatechange = this.onreadystatechange;\n        this.onreadystatechange = function (event) {\n          if (_origin_onreadystatechange) {\n            _originOpen.apply(this, arguments);\n          }\n          if (this.readyState === 4) {\n            ajaxEnd('end')();\n          }\n        };\n      }\n      return _originSend.apply(this, arguments);\n    };\n\n    // fetch hook\n    // 不是所有浏览器都兼容fetch方法\n    // request reponse\n    if (window.fetch) {\n      let _origin_fetch = window.fetch;\n      window.fetch = function () {\n        let startTime = Date.now();\n        let args = [].slice.call(arguments);//获取所有参数\n\n        let fetchInput = args[0];\n        let method = 'GET';\n        let url;\n\n        if (typeof fetchInput === 'string') {\n          url = fetchInput;\n        } else if ('Request' in window && fetchInput instanceof window.Request) {\n          url = fetchInput.url;\n          method = fetchInput.method ? fetchInput.method : method;\n        } else {\n          url = '' + fetchInput;\n        }\n\n        if (args[1] && args[1].method) {\n          method = args[1].method;\n        }\n\n        // TODO: eagle check\n        let fetchData = {\n          method: method,\n          url: url,\n          status: null,\n        };\n\n        return _origin_fetch.apply(this, args).then(function (response) {\n          fetchData.status = response.status;\n          fetchData.type = 'fetch';\n          fetchData.duration = Date.now() - startTime;//总时长\n          // TODO: 数据的大小\n          cb(fetchData);\n          return response;\n        });\n      }\n    }\n  }\n};\n\nexport default xhrHook;","// /html/body/div[2]/ul/li[2]\n// 每当用户点击的时候生成一个xpath\n// 需要对很多边界条件进行判断\n\nlet getXpath = (element) => {\n  if (!(element instanceof Element)) {\n    return void 0;\n  }\n\n  if (element.nodeType !== 1) {\n    return void 0;\n  }\n\n  let rootElement = document.body;\n  if (element === rootElement) {\n    return void 0;\n  }\n\n  // 判断是第几个兄弟元素\n  let childIndex = (ele) => {\n    let parent = ele.parentNode;\n    let children = [].slice.call(parent.childNodes).filter(_ => _.nodeType === 1);//点击的是块级元素，非文字才上报；\n    // children = children.filter(node=>node.tagName === ele.tagName);//TODO: 相同标签第几个元素；\n    let i = 0;\n    for (let _i = 0, len = children.length; _i < len; _i++) {\n      if (children[_i] === ele) {\n        i = _i;\n        break;\n      }\n    }\n    return i === 0 ? '' : '[' + i + ']';\n  };\n\n  let xpath = '';\n\n  while (element !== document) {\n    let tag = element.tagName.toLocaleLowerCase();\n    let eleIndex = childIndex(element);\n    xpath = '/' + tag + eleIndex + xpath;\n    element = element.parentNode;\n  }\n\n  return xpath;\n};\n\nexport default getXpath;","import getXpath from './util/xpath.js';\n\nexport default {\n    init: (cb) => {\n        cb();\n        document.addEventListener('click', (e) => {\n            let xpath = getXpath(e.target);\n            console.log('xpath: ', xpath);\n        }, false);\n    }\n}","import perf from './perf.js';\nimport resources from './resources.js';\nimport errorCatch from './errorCatch.js';\nimport xhrHook from './xhr.js';\nimport behavior from './behavior.js';\n\nperf.init((perfData) => {\n  // console.log('perf', perfData);\n});\n\nresources.init((list) => {\n  // console.log('resources', list.length === 1 ? list[0] : list);\n});\n\nerrorCatch.init((err) => {\n  console.log('errorCatch', err);\n});\n\nxhrHook.init((xhrInfo) => {\n  // console.log(xhrInfo);\n});\n\nbehavior.init(() => {\n  console.log('behavior init');\n});"],"names":["perf","cb","cycleFreq","isOnload","performance","window","mozPerformance","msPerformance","webkitPerformance","Util","name","callback","useCapture","addEventListener","attachEvent","timer","document","readyState","runCheck","timing","domInteractive","setTimeout","loadEventEnd","reportPerf","filterTime","a","b","undefined","perfData","fetchStart","navigationStart","responseEnd","redirectStart","domainLookupEnd","domainLookupStart","connectEnd","connectStart","responseStart","requestStart","domComplete","domLoading","loadEventStart","domContentLoadedEventStart","domready","type","onload","resolvePerformanceTiming","o","initiatorType","parseInt","duration","redirectEnd","startTime","resolveEntries","entries","map","item","resources","getEntries","PerformanceObserver","observer","list","e","error","observe","getEntriesByType","formatError","errObj","col","column","columnNumber","row","line","lineNumber","message","stack","matchUrl","match","urlFirstStack","regUrlCheck","resourceUrl","test","stackCol","stackRow","posStack","length","Number","errorCatch","_originOnerror","onerror","arg","errorMessage","scriptURI","errorObj","errorInfo","_errorMessage","_scriptURI","_lineNumber","_columnNumber","apply","_originOnunhandledrejection","onunhandledrejection","reason","xhrHook","xhr","XMLHttpRequest","_eagle_flag","_originOpen","prototype","open","method","url","async","user","password","_eagle_xhr_info","status","arguments","_originSend","send","value","_self","_eagle_start_time","Date","now","ajaxEnd","event","response","responseSize","responseType","JSON","stringify","_this","size","byteLength","documentElement","innerHTML","success","requestSize","_origin_onreadystatechange","onreadystatechange","fetch","_origin_fetch","args","slice","call","fetchInput","Request","fetchData","then","getXpath","element","Element","nodeType","rootElement","body","childIndex","ele","parent","parentNode","children","childNodes","filter","_","i","_i","len","xpath","tag","tagName","toLocaleLowerCase","eleIndex","target","log","init","err","xhrInfo","behavior"],"mappings":"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"}